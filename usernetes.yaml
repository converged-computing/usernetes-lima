# Deploy kubernetes via k3s (which installs a bundled containerd).
# $ limactl start usernetes
# $ limactl shell k3s sudo kubectl
#
# It can be accessed from the host by exporting the kubeconfig file;
# the ports are already forwarded automatically by lima:
#
# $ export KUBECONFIG=$(limactl list k3s --format 'unix://{{.Dir}}/copied-from-guest/kubeconfig.yaml')
# $ kubectl get no
# NAME       STATUS   ROLES                  AGE   VERSION
# lima-k3s   Ready    control-plane,master   69s   v1.21.1+k3s1
#
# This template requires Lima v0.11.1 or later.

images:
- location: "https://dl.rockylinux.org/pub/rocky/9.2/images/x86_64/Rocky-9-GenericCloud-Base-9.2-20230513.0.x86_64.qcow2"
  arch: "x86_64"
  digest: "sha256:50510f98abe1b20a548102a05a9be83153b0bf634fc502d5c8d1f508f6de1430"
- location: "http://dl.rockylinux.org/pub/rocky/9.2/images/aarch64/Rocky-9-GenericCloud-Base-9.2-20230513.0.aarch64.qcow2"
  arch: "aarch64"
  digest: "sha256:eb7752c0be359007ad470e43b0d8c921e31d3ad7d4bcec9b6a2b18a8d17c05d8"

# Allow a shared location in /tmp/lima to write into VMs
mounts:
- location: "~"
- location: "/tmp/lima"
  writable: true
  
# containerd is managed by k3s, not by Lima, so the values are set to false here.
containerd:
  system: false
  user: false

# TODO I'm not sure if this is working - jq is not in the container
provision:
- mode: system
  script: |
    #!/bin/sh
    dnf update -y
    dnf clean all
    dnf group install -y "Development Tools"
    dnf config-manager --set-enabled powertools
    dnf install -y epel-release
    dnf install -y \
      libevent-devel \
      czmq-devel \
      jansson-devel \
      lz4-devel \
      sqlite-devel \
      ncurses-devel \
      libarchive-devel \
      libxml2-devel \
      yaml-cpp-devel \
      nfs-utils \
      python3-cffi \
      python3-yaml \
      python3-jsonschema \
      python3-sphinx \
      python3-docutils \
      syslog \
      jq \
      curl

      dnf -q rq --groupmember rsyslog

      # Cgroups 2
      dnf install -y grubby 
      grubby --update-kernel=ALL --args="systemd.unified_cgroup_hierarchy=1"


#probes:
#- script: |
#    #!/bin/bash
#    set -eux -o pipefail
#    if ! timeout 30s bash -c "until test -f /etc/rancher/k3s/k3s.yaml; do sleep 3; done"; then
#            echo >&2 "k3s is not running yet"
#            exit 1
#    fi
#  hint: |
#    The k3s kubeconfig file has not yet been created.
#    Run "limactl shell k3s sudo journalctl -u k3s" to check the log.
#    If that is still empty, check the bottom of the log at "/var/log/cloud-init-output.log".

#copyToHost:
#- guest: "/etc/rancher/k3s/k3s.yaml"
#  host: "{{.Dir}}/copied-from-guest/kubeconfig.yaml"
#  deleteOnStop: true
#message: |
#  To run `kubectl` on the host (assumes kubectl is installed), run the following commands:
#  ------
#  export KUBECONFIG="{{.Dir}}/copied-from-guest/kubeconfig.yaml"
#  kubectl ...
#  ------
